package applications.tcg;

import java.util.List;
import de.wwu.muli.*;
import de.wwu.muli.solution.*;
import java.lang.Object;
import de.wwu.muli.tcg.*;
import de.wwu.muli.tcg.testsetreducer.*;

public class MainAckermann {

    public static void main(String[] args) {
        Solution[] solutions = Muli.getAllSolutionsWithTestCases(MainAckermann::searchRegion, Ackermann.class.getName() + ".ackermann");
        TestCaseGenerator tcg = TestCaseGenerator.get(solutions);
        TestSetReducer reducer = new SimpleForwardsTestSetReducer();
        tcg.setTestSetReducer(reducer);
        tcg.generateTestClassStringRepresentation();
    }

    static int searchRegion() {
        int m free;
        if (m < 0 || m > 3) {
            throw Muli.fail();
        }
        int n free;
        if (n < 0 || n > 5) {
            throw Muli.fail();
        }
        int result = Ackermann.ackermann(m, n);
        if (m < 0 || n < 0 || result >= 0) {
            return result;
        } else {
            throw new IllegalStateException("illegal result or parameters");
        }
    }

}


/**
 * Copyright (c) 2011, Regents of the University of California All rights reserved.
 *
 * <p>Redistribution and use in source and binary forms, with or without modification, are permitted
 * provided that the following conditions are met:
 *
 * <p>1. Redistributions of source code must retain the above copyright notice, this list of
 * conditions and the following disclaimer.
 *
 * <p>2. Redistributions in binary form must reproduce the above copyright notice, this list of
 * conditions and the following disclaimer in the documentation and/or other materials provided with
 * the distribution.
 *
 * <p>3. Neither the name of the University of California, Berkeley nor the names of its
 * contributors may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

public class Ackermann {

    static int ackermann(int m, int n) {
      if (m == 0) {
        return n + 1;
      }
      if (n == 0) {
        return ackermann(m - 1, 1);
      }
      return ackermann(m - 1, ackermann(m, n - 1));
    }
}