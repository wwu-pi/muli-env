package applications.tcg;

import java.util.List;
import de.wwu.muli.*;
import de.wwu.muli.solution.*;
import java.lang.Object;
import de.wwu.muli.tcg.*;
import de.wwu.muli.tcg.testsetreducer.*;

public class MainSort {

    public static void main(String[] args) {
        Solution[] solutions = Muli.getAllSolutionsWithTestCases(Sort::searchRegion, Sort.class.getName() + ".sort");
        for(Solution s : solutions){
            TestCase<?> tc = s.testCase;
            Object[] inputs = tc.getInputs();
        }
        TestCaseGenerator tcg = TestCaseGenerator.get(solutions);
        //tcg.setTestSetReducer(new SimpleForwardsTestSetReducer());
        tcg.generateTestClassStringRepresentation();
    }

}

class Sort {
      static int[] sort(int[] a) {
        final int N = a.length;
        for (int i = 1; i < N; i++) { // N branches
          int j = i - 1;
          int x = a[i];
          // First branch (j >= 0):  2 + 3 + ... + N = N(N+1)/2 - 1 branches
          // Second branch (a[j] > x):  1 + 2 + ... + N-1 = (N-1)N/2 branches
          while ((j >= 0) && (a[j] > x)) {
            a[j + 1] = a[j];
            j--;
          }
          a[j + 1] = x;
        }
        return a;
      }

    static int[] searchRegion() {
         int a[] free;
         if (a.length > 4) throw Muli.fail();

         sort(a);
         return a;
    }
}